///
/// JNitroGoogleUserInfo.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroGoogleUserInfo.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::nitrogooglesso {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NitroGoogleUserInfo" and the the Kotlin data class "NitroGoogleUserInfo".
   */
  struct JNitroGoogleUserInfo final: public jni::JavaClass<JNitroGoogleUserInfo> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrogooglesso/NitroGoogleUserInfo;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NitroGoogleUserInfo by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroGoogleUserInfo toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldEmail = clazz->getField<jni::JString>("email");
      jni::local_ref<jni::JString> email = this->getFieldValue(fieldEmail);
      static const auto fieldIdToken = clazz->getField<jni::JString>("idToken");
      jni::local_ref<jni::JString> idToken = this->getFieldValue(fieldIdToken);
      static const auto fieldGivenName = clazz->getField<jni::JString>("givenName");
      jni::local_ref<jni::JString> givenName = this->getFieldValue(fieldGivenName);
      static const auto fieldFamilyName = clazz->getField<jni::JString>("familyName");
      jni::local_ref<jni::JString> familyName = this->getFieldValue(fieldFamilyName);
      static const auto fieldPhoneNumber = clazz->getField<jni::JString>("phoneNumber");
      jni::local_ref<jni::JString> phoneNumber = this->getFieldValue(fieldPhoneNumber);
      static const auto fieldDisplayName = clazz->getField<jni::JString>("displayName");
      jni::local_ref<jni::JString> displayName = this->getFieldValue(fieldDisplayName);
      static const auto fieldProfilePictureUri = clazz->getField<jni::JString>("profilePictureUri");
      jni::local_ref<jni::JString> profilePictureUri = this->getFieldValue(fieldProfilePictureUri);
      return NitroGoogleUserInfo(
        email->toStdString(),
        idToken->toStdString(),
        givenName != nullptr ? std::make_optional(givenName->toStdString()) : std::nullopt,
        familyName != nullptr ? std::make_optional(familyName->toStdString()) : std::nullopt,
        phoneNumber != nullptr ? std::make_optional(phoneNumber->toStdString()) : std::nullopt,
        displayName != nullptr ? std::make_optional(displayName->toStdString()) : std::nullopt,
        profilePictureUri != nullptr ? std::make_optional(profilePictureUri->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNitroGoogleUserInfo::javaobject> fromCpp(const NitroGoogleUserInfo& value) {
      return newInstance(
        jni::make_jstring(value.email),
        jni::make_jstring(value.idToken),
        value.givenName.has_value() ? jni::make_jstring(value.givenName.value()) : nullptr,
        value.familyName.has_value() ? jni::make_jstring(value.familyName.value()) : nullptr,
        value.phoneNumber.has_value() ? jni::make_jstring(value.phoneNumber.value()) : nullptr,
        value.displayName.has_value() ? jni::make_jstring(value.displayName.value()) : nullptr,
        value.profilePictureUri.has_value() ? jni::make_jstring(value.profilePictureUri.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::nitrogooglesso
