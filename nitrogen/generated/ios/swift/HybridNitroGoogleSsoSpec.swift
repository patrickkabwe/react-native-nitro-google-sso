///
/// HybridNitroGoogleSsoSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroGoogleSsoSpec``
public protocol HybridNitroGoogleSsoSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func configure(config: NitroGoogleSSOConfig) throws -> Void
  func signIn() throws -> Promise<NitroGoogleUserInfo?>
  func oneTagSignIn() throws -> Promise<NitroGoogleUserInfo?>
  func signOut() throws -> Promise<Void>
  func getCurrentUser() throws -> Promise<NitroGoogleUserInfo?>
}

/// See ``HybridNitroGoogleSsoSpec``
public class HybridNitroGoogleSsoSpec_base {
  private weak var cxxWrapper: HybridNitroGoogleSsoSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroGoogleSsoSpec_cxx {
  #if DEBUG
    guard self is HybridNitroGoogleSsoSpec else {
      fatalError("`self` is not a `HybridNitroGoogleSsoSpec`! Did you accidentally inherit from `HybridNitroGoogleSsoSpec_base` instead of `HybridNitroGoogleSsoSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroGoogleSsoSpec_cxx(self as! HybridNitroGoogleSsoSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroGoogleSso HybridObject.
 * Implement this protocol to create Swift-based instances of NitroGoogleSso.
 * ```swift
 * class HybridNitroGoogleSso : HybridNitroGoogleSsoSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroGoogleSsoSpec = HybridNitroGoogleSsoSpec_protocol & HybridNitroGoogleSsoSpec_base
